# Required secrets
#   UNITY_LICENSE: The contents of Unity license file
name: 📘 Build Documentation

env:
  unityVersion: 2022.3.10f1
  targetPlatform: StandaloneLinux64

on:
  workflow_call:
    secrets:
      UNITY_LICENSE:
        description: The contents of Unity license file
        required: true
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy to GitHub Pages
        required: true
        default: false

jobs:
  setup:
    name: 📘 Setup Metadata
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: 🚚 Checkout
        uses: actions/checkout@v4

      - name: ⚙️Setup matrix
        id: matrix
        run: echo "matrix=$(jq -c . < ./Documentation/metadata.json)" >> $GITHUB_OUTPUT
  
  build:
    name: 📘 Build Documentation
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: 🚚 Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.ref }}

      - name: ⚙️ Setup
        id: setup
        run: |
          # install docfx
          dotnet tool install -g docfx

          # install DocFxForUnity
          npx openupm-cli add 'com.coffee.docfx-for-unity@https://github.com/mob-sakai/TestPkgDev.git?path=Packages/src#develop'

      - name: 📥 Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ env.unityVersion }}-${{ env.targetPlatform }}-${{ github.sha }}
          restore-keys: |
            Library-${{ env.unityVersion }}-${{ env.targetPlatform }}-
            Library-${{ env.unityVersion }}-
            Library-

#      - name: 🛠️ Run UnityEditor To Setup '*.csproj'
#        uses: game-ci/unity-builder@v3
#        timeout-minutes: 30
#        continue-on-error: true # NOTE: Disabling the check for the "Build results" output? https://github.com/game-ci/unity-builder/issues/563
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#        with:
#          unityVersion: ${{ env.unityVersion }}
#          targetPlatform: ${{ env.targetPlatform }}
#          allowDirtyBuild: true
#          buildMethod: DocFxForUnity.SetupCsProj

      - name: 📘 Build docfx
        run: |
          echo "==== Update ===="
          jq " \
          .build.sitemap.baseUrl = \"${{ matrix.url }}\" | \
          .build.globalMetadata._appTitle = \"${{ matrix.appTitle }}\" | \
          .build.dest = \"${{ matrix.dest }}\" \
          " Documentation/docfx.json > Documentation/__docfx.json
          
          echo "==== Configuration ===="
          cat Documentation/__docfx.json
          
          echo "==== Build ===="
          docfx Documentation/__docfx.json

      - name: 📦 Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: Documentation/_site

  deploy:
    if: inputs.deploy == 'true'
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: 📦 Download Artifacts To '_site'
        uses: actions/download-artifact@v3
        with:
          path: _site

      - name: 🚚 Move Documentation Files To '_site'
        run: |
          mv _site/Documentation/* _site/
          rm -r _site/Documentation

      - name: 📦 Upload '_site'
        uses: actions/upload-pages-artifact@v2

      - name: 🚀 Deploy To GitHub Pages
        uses: actions/deploy-pages@v2